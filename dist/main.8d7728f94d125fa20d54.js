(()=>{var n={309:(n,r,e)=>{"use strict";e.d(r,{Z:()=>a});var t=e(537),o=e.n(t),A=e(645),i=e.n(A)()(o());i.push([n.id,".answers{opacity:0;transition:opacity 1s ease;min-height:100vh;padding:30px;display:flex;align-items:center;flex-direction:column;justify-content:center;text-align:center}.answers__btn{padding:10px;background:inherit;border:none;display:flex;align-items:center;gap:20px;margin-top:20px;cursor:pointer}.answers__btn:hover{color:var(--accent-color);fill:var(--accent-color)}.answerWrapper{display:none}svg{height:20px;width:20px}.rotate{transform:rotate(180deg)}h3{font-size:var(--font-size-m)}","",{version:3,sources:["webpack://./src/js/modules/components/Answers/Answers.styles.scss"],names:[],mappings:"AAAA,SACI,SAAA,CACA,0BAAA,CACA,gBAAA,CACA,YAAA,CACA,YAAA,CACA,kBAAA,CACA,qBAAA,CACA,sBAAA,CACA,iBAAA,CACA,cACI,YAAA,CACA,kBAAA,CACA,WAAA,CACA,YAAA,CACA,kBAAA,CACA,QAAA,CACA,eAAA,CACA,cAAA,CACA,oBACI,yBAAA,CACA,wBAAA,CAKZ,eACI,YAAA,CAGJ,IACI,WAAA,CACA,UAAA,CAGJ,QACI,wBAAA,CAGJ,GACI,4BAAA",sourcesContent:[".answers {\r\n    opacity: 0;\r\n    transition: opacity 1s ease;\r\n    min-height: 100vh;\r\n    padding: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    text-align: center;\r\n    &__btn {\r\n        padding: 10px;\r\n        background: inherit;\r\n        border: none;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 20px;\r\n        margin-top: 20px;\r\n        cursor: pointer;\r\n        &:hover {\r\n            color: var(--accent-color);\r\n            fill: var(--accent-color);\r\n        }\r\n    }\r\n}\r\n\r\n.answerWrapper {\r\n    display: none;\r\n}\r\n\r\nsvg {\r\n    height: 20px;\r\n    width: 20px;\r\n}\r\n\r\n.rotate {\r\n    transform: rotate(180deg);\r\n}\r\n\r\nh3 {\r\n    font-size: var(--font-size-m);\r\n}"],sourceRoot:""}]);const a=i},562:(n,r,e)=>{"use strict";e.d(r,{Z:()=>a});var t=e(537),o=e.n(t),A=e(645),i=e.n(A)()(o());i.push([n.id,".backBtn{cursor:pointer;position:fixed;top:30px;right:20px;font-size:40px;transition:all .3s ease}.backBtn:hover{transform:scale(1.2)}.hidden{display:none}","",{version:3,sources:["webpack://./src/js/modules/components/BackScroll/backScroll.scss"],names:[],mappings:"AAAA,SACI,cAAA,CACA,cAAA,CACA,QAAA,CACA,UAAA,CACA,cAAA,CACA,uBAAA,CACA,eACI,oBAAA,CAIR,QACI,YAAA",sourcesContent:[".backBtn {\r\n    cursor: pointer;\r\n    position: fixed;\r\n    top: 30px;\r\n    right: 20px;\r\n    font-size: 40px;\r\n    transition: all .3s ease;\r\n    &:hover {\r\n        transform: scale(1.2);\r\n    }\r\n}\r\n\r\n.hidden {\r\n    display: none;\r\n}"],sourceRoot:""}]);const a=i},204:(n,r,e)=>{"use strict";e.d(r,{Z:()=>a});var t=e(537),o=e.n(t),A=e(645),i=e.n(A)()(o());i.push([n.id,".dropdown{position:relative;margin-right:auto}.dropdown-content{display:none;flex-direction:column;gap:14px;padding:20px;border-top-right-radius:10px;border-bottom-right-radius:10px;background-color:#5f9ea0;position:absolute;min-width:200px;font-size:var(--font-size-l)}.opened{display:flex}.dropbtn{background:inherit;border:1px solid var(--secondary-color);padding:10px;border-radius:14px;fill:var(--secondary-color);margin-left:10px}","",{version:3,sources:["webpack://./src/js/modules/components/Dropdown/Dropdown.styles.scss"],names:[],mappings:"AAAA,UACI,iBAAA,CACA,iBAAA,CAGJ,kBACI,YAAA,CACA,qBAAA,CACA,QAAA,CACA,YAAA,CACA,4BAAA,CACA,+BAAA,CACA,wBAAA,CACA,iBAAA,CACA,eAAA,CACA,4BAAA,CAIJ,QACI,YAAA,CAGJ,SACI,kBAAA,CACA,uCAAA,CACA,YAAA,CACA,kBAAA,CACA,2BAAA,CACA,gBAAA",sourcesContent:[".dropdown {\r\n    position: relative;\r\n    margin-right: auto;\r\n}\r\n\r\n.dropdown-content {\r\n    display: none;\r\n    flex-direction: column;\r\n    gap: 14px;\r\n    padding: 20px;\r\n    border-top-right-radius: 10px;\r\n    border-bottom-right-radius: 10px;\r\n    background-color: cadetblue;\r\n    position: absolute;\r\n    min-width: 200px;\r\n    font-size: var(--font-size-l);\r\n}\r\n\r\n\r\n.opened {\r\n    display: flex;\r\n}\r\n\r\n.dropbtn {\r\n    background: inherit;\r\n    border: 1px solid var(--secondary-color);\r\n    padding: 10px;\r\n    border-radius: 14px;\r\n    fill: var(--secondary-color);\r\n    margin-left: 10px;\r\n}"],sourceRoot:""}]);const a=i},629:(n,r,e)=>{"use strict";e.d(r,{Z:()=>a});var t=e(537),o=e.n(t),A=e(645),i=e.n(A)()(o());i.push([n.id,".map{padding:0 10px}.location{display:flex;align-items:center;justify-content:space-around;gap:20px;width:100%;padding:20px 40px;min-height:100vh}.yandexMap{position:relative;overflow:hidden;max-width:700px;flex-grow:1}@media(max-width: 730px){.location{flex-direction:column;align-items:normal;padding:20px 0}}","",{version:3,sources:["webpack://./src/js/modules/components/Location/Location.styles.scss"],names:[],mappings:"AAAA,KACI,cAAA,CAGJ,UACI,YAAA,CACA,kBAAA,CACA,4BAAA,CACA,QAAA,CACA,UAAA,CACA,iBAAA,CACA,gBAAA,CAGJ,WACI,iBAAA,CACA,eAAA,CACA,eAAA,CACA,WAAA,CAGJ,yBACI,UACI,qBAAA,CACA,kBAAA,CACA,cAAA,CAAA",sourcesContent:[".map {\r\n    padding: 0 10px;\r\n}\r\n\r\n.location {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    gap: 20px;\r\n    width: 100%;\r\n    padding: 20px 40px;\r\n    min-height: 100vh;\r\n}\r\n\r\n.yandexMap {\r\n    position: relative;\r\n    overflow: hidden;\r\n    max-width: 700px;\r\n    flex-grow: 1;\r\n}\r\n\r\n@media (max-width: 730px) {\r\n    .location {\r\n        flex-direction: column;\r\n        align-items: normal;\r\n        padding: 20px 0;\r\n    }\r\n}"],sourceRoot:""}]);const a=i},750:(n,r,e)=>{"use strict";e.d(r,{Z:()=>a});var t=e(537),o=e.n(t),A=e(645),i=e.n(A)()(o());i.push([n.id,".message{opacity:0;transition:opacity 1s ease;height:100vh;display:flex;align-items:center;justify-content:center;padding:30px;font-size:var(--font-size-m)}.message__content{text-align:center}","",{version:3,sources:["webpack://./src/js/modules/components/MessageToGuests/messageToGuests.style.scss"],names:[],mappings:"AAAA,SACI,SAAA,CACA,0BAAA,CACA,YAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,YAAA,CACA,4BAAA,CAGJ,kBACI,iBAAA",sourcesContent:[".message {\r\n    opacity: 0;\r\n    transition: opacity 1s ease;\r\n    height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 30px;\r\n    font-size: var(--font-size-m);\r\n}\r\n\r\n.message__content {\r\n    text-align: center;\r\n}"],sourceRoot:""}]);const a=i},135:(n,r,e)=>{"use strict";e.d(r,{Z:()=>a});var t=e(537),o=e.n(t),A=e(645),i=e.n(A)()(o());i.push([n.id,".modal{display:none;align-items:center;justify-content:center;position:fixed;top:0;bottom:0;width:100%;height:100%;background-color:rgba(0,0,0,.8)}.modal__sendForm{display:flex;flex-direction:column;align-items:center;justify-content:center;gap:20px;background-color:var(--bg-color-main);width:320px;height:180px;border-radius:20px}#guestName{padding:5px;border-radius:4px;outline:none;border:none}.modal__sendBtn{background-color:var(--accent-color);padding:8px;border:none;border-radius:8px;cursor:pointer;transition:all .3s ease}.modal__sendBtn:hover{transform:scale(1.1)}.modal__closeBtn{position:fixed;top:30px;right:30px;background:none;border:none;color:var(--inverted-primary-color);font-size:var(--font-size-l);padding:10px;cursor:pointer}.modal__closeBtn:hover{color:var(--accent-color)}","",{version:3,sources:["webpack://./src/js/modules/components/Modal/modal.style.scss"],names:[],mappings:"AAAA,OACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,cAAA,CACA,KAAA,CACA,QAAA,CACA,UAAA,CACA,WAAA,CACA,+BAAA,CAGJ,iBACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,sBAAA,CACA,QAAA,CACA,qCAAA,CACA,WAAA,CACA,YAAA,CACA,kBAAA,CAGJ,WACI,WAAA,CACA,iBAAA,CACA,YAAA,CACA,WAAA,CAGJ,gBACI,oCAAA,CACA,WAAA,CACA,WAAA,CACA,iBAAA,CACA,cAAA,CACA,uBAAA,CACA,sBACI,oBAAA,CAIR,iBACI,cAAA,CACA,QAAA,CACA,UAAA,CACA,eAAA,CACA,WAAA,CACA,mCAAA,CACA,4BAAA,CACA,YAAA,CACA,cAAA,CACA,uBACI,yBAAA",sourcesContent:[".modal {\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba($color: #000000, $alpha: .8);\r\n}\r\n\r\n.modal__sendForm {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 20px;\r\n    background-color: var(--bg-color-main);\r\n    width: 320px;\r\n    height: 180px;\r\n    border-radius: 20px;\r\n}\r\n\r\n#guestName {\r\n    padding: 5px;\r\n    border-radius: 4px;\r\n    outline: none;\r\n    border: none;\r\n}\r\n\r\n.modal__sendBtn {\r\n    background-color: var(--accent-color);\r\n    padding: 8px;\r\n    border: none;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    transition: all .3s ease;\r\n    &:hover {\r\n        transform: scale(1.1);\r\n    }\r\n}\r\n\r\n.modal__closeBtn {\r\n    position: fixed;\r\n    top: 30px;\r\n    right: 30px;\r\n    background: none;\r\n    border: none;\r\n    color: var(--inverted-primary-color);\r\n    font-size: var(--font-size-l);\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        color: var(--accent-color);\r\n    }\r\n}"],sourceRoot:""}]);const a=i},856:(n,r,e)=>{"use strict";e.d(r,{Z:()=>a});var t=e(537),o=e.n(t),A=e(645),i=e.n(A)()(o());i.push([n.id,".navigation{background:none;margin-top:30px;margin-bottom:30px;display:flex;justify-content:center;gap:2rem;align-items:center;padding:10px 5px 5px 5px;color:var(--secondary-color);width:100%}.navigation a{transition:all .3s ease;cursor:pointer}.navigation a:hover{color:var(--accent-color);transform:scale(1.1)}@media(max-width: 600px){.navigation{gap:10px}}","",{version:3,sources:["webpack://./src/js/modules/components/Navbar/Navbar.styles.scss"],names:[],mappings:"AAAA,YACI,eAAA,CACA,eAAA,CACA,kBAAA,CACA,YAAA,CACA,sBAAA,CACA,QAAA,CACA,kBAAA,CACA,wBAAA,CACA,4BAAA,CACA,UAAA,CACA,cACI,uBAAA,CACA,cAAA,CACA,oBACI,yBAAA,CACA,oBAAA,CAKZ,yBACI,YACI,QAAA,CAAA",sourcesContent:[".navigation {\r\n    background: none;\r\n    margin-top: 30px;\r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 2rem;\r\n    align-items: center;\r\n    padding: 10px 5px 5px 5px;\r\n    color: var(--secondary-color);\r\n    width: 100%;\r\n    & a {\r\n        transition: all 0.3s ease;\r\n        cursor: pointer;\r\n        &:hover {\r\n            color: var(--accent-color);\r\n            transform: scale(1.1);\r\n        }\r\n    }\r\n}\r\n\r\n@media (max-width: 600px) {\r\n    .navigation {\r\n        gap: 10px;\r\n    }\r\n}"],sourceRoot:""}]);const a=i},732:(n,r,e)=>{"use strict";e.d(r,{Z:()=>a});var t=e(537),o=e.n(t),A=e(645),i=e.n(A)()(o());i.push([n.id,".survey{opacity:0;transition:opacity 1s ease}.survey__wrapper{display:flex;flex-direction:column;gap:20px;padding:30px 0}.question__title{margin-bottom:10px}.wrapper{display:flex;flex-direction:column;gap:6px;margin-left:50px}.wrapper div{display:flex;gap:10px}.survey__button{width:100px;padding:10px;background-color:#1e90ff;border-radius:10px;margin-left:calc(50% - 50px);cursor:pointer}.survey__input{padding:6px;border-radius:6px}.survey__radio{appearance:none;background:#000;cursor:pointer}.survey{display:flex;flex-direction:column;align-items:center}.survey__title{text-align:center;margin-bottom:20px}.label{cursor:pointer}.label:hover{color:var(--accent-color)}","",{version:3,sources:["webpack://./src/js/modules/components/Survey/Survey.styles.scss"],names:[],mappings:"AAAA,QACI,SAAA,CACA,0BAAA,CAGJ,iBACI,YAAA,CACA,qBAAA,CACA,QAAA,CACA,cAAA,CAGJ,iBACI,kBAAA,CAGJ,SACI,YAAA,CACA,qBAAA,CACA,OAAA,CACA,gBAAA,CACA,aACI,YAAA,CACA,QAAA,CAIR,gBACI,WAAA,CACA,YAAA,CACA,wBAAA,CACA,kBAAA,CACA,4BAAA,CACA,cAAA,CAGJ,eACI,WAAA,CACA,iBAAA,CAGJ,eACI,eAAA,CACA,eAAA,CACA,cAAA,CAGJ,QACI,YAAA,CACA,qBAAA,CACA,kBAAA,CAEJ,eACI,iBAAA,CACA,kBAAA,CAGJ,OACI,cAAA,CACA,aACI,yBAAA",sourcesContent:[".survey {\r\n    opacity: 0;\r\n    transition: opacity 1s ease;\r\n}\r\n\r\n.survey__wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    padding: 30px 0;\r\n}\r\n\r\n.question__title {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 6px;\r\n    margin-left: 50px;\r\n    & div {\r\n        display: flex;\r\n        gap: 10px;\r\n    }\r\n}\r\n\r\n.survey__button {\r\n    width: 100px;\r\n    padding: 10px;\r\n    background-color: dodgerblue;\r\n    border-radius: 10px;\r\n    margin-left: calc(50% - 50px);\r\n    cursor: pointer;\r\n}\r\n\r\n.survey__input {\r\n    padding: 6px;\r\n    border-radius: 6px;\r\n}\r\n\r\n.survey__radio {\r\n    appearance: none;\r\n    background: black;\r\n    cursor: pointer;\r\n}\r\n\r\n.survey {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n.survey__title {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.label {\r\n    cursor: pointer;\r\n    &:hover {\r\n        color: var(--accent-color);\r\n    }\r\n}"],sourceRoot:""}]);const a=i},588:(n,r,e)=>{"use strict";e.d(r,{Z:()=>a});var t=e(537),o=e.n(t),A=e(645),i=e.n(A)()(o());i.push([n.id,".timer{margin-top:40vh}.timer_wrapper{font-size:var(--font-size-xs);display:flex;justify-content:center;align-items:center;gap:20px;padding:20px;border-radius:14px;border:2px solid;margin:0 10px}.timer_item{display:flex;flex-direction:column;justify-content:center;align-items:center;border-radius:14px;padding:10px;width:15vw;height:15vw;background-color:var(--bg-color-secondary)}.time{font-size:var(--font-size-l)}@media(max-height: 556px){.timer{margin-top:30vh}}@media(min-width: 556px){.timer_item{width:80px;height:80px}}","",{version:3,sources:["webpack://./src/js/modules/components/Timer/Timer.styles.scss"],names:[],mappings:"AAAA,OACI,eAAA,CAGJ,eACI,6BAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,QAAA,CACA,YAAA,CACA,kBAAA,CACA,gBAAA,CACA,aAAA,CAGJ,YACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,kBAAA,CACA,YAAA,CACA,UAAA,CACA,WAAA,CACA,0CAAA,CAGJ,MACI,4BAAA,CAKJ,0BACI,OACI,eAAA,CAAA,CAKR,yBACI,YACI,UAAA,CACA,WAAA,CAAA",sourcesContent:[".timer {\r\n    margin-top: 40vh;\r\n}\r\n\r\n.timer_wrapper {\r\n    font-size: var(--font-size-xs);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 20px;\r\n    padding: 20px;\r\n    border-radius: 14px;\r\n    border: 2px solid;\r\n    margin: 0 10px;\r\n}\r\n\r\n.timer_item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 14px;\r\n    padding: 10px;\r\n    width: 15vw;\r\n    height: 15vw;\r\n    background-color: var(--bg-color-secondary);\r\n}\r\n\r\n.time {\r\n    font-size: var(--font-size-l);\r\n}\r\n\r\n\r\n\r\n@media (max-height: 556px) {\r\n    .timer {\r\n        margin-top: 30vh;\r\n    }\r\n}\r\n\r\n\r\n@media (min-width: 556px) {\r\n    .timer_item {\r\n        width: 80px;\r\n        height: 80px;\r\n    }\r\n}"],sourceRoot:""}]);const a=i},137:(n,r,e)=>{"use strict";e.d(r,{Z:()=>p});var t=e(537),o=e.n(t),A=e(645),i=e.n(A),a=e(667),s=e.n(a),c=new URL(e(954),e.b),l=i()(o()),d=s()(c);l.push([n.id,`:root{--primary-color: #123123;--inverted-primary-color: #fff;--secondary-color: #ffffff;--accent-color: #5b63ff;--bg-color-main: hsl(0, 0%, 100%);--bg-color-secondary: #767676;--bg-color-secondary-light:rgb(166, 185, 165)5;--font-family-main: "Courier New", Courier, monospace;--font-family-secondary: "Courier New", Courier, monospace;--font-size-xs: 12px;--font-size-s: 18px;--font-size-m: 24px;--font-size-l: 30px}@media(max-width: 450px){:root{--font-size-xs: 8px;--font-size-s: 14px;--font-size-m: 20px;--font-size-l: 26px}}*{margin:0;padding:0;box-sizing:border-box}h1,h2,h3{font-weight:600}body{font-family:"Montserrat",sans-serif;font-weight:300;color:var(--primary-color);font-size:var(--font-size-s);background-color:var(--bg-color-main)}.title,.date{font-size:var(--font-size-l)}.header{color:var(--secondary-color);height:100vh;display:flex;flex-direction:column;align-items:center;background:url(${d});background-size:cover;background-repeat:no-repeat;background-position:center;background-blend-mode:multiply;background-color:rgba(0,0,0,.5)}.map{margin-top:100px;text-align:center}.map h3{margin:10px 0}*::-webkit-scrollbar{width:14px}*::-webkit-scrollbar-track{background:none}*::-webkit-scrollbar-thumb{border-radius:10px;box-shadow:inset 0 0 6px rgba(0,0,0,.3)}input[type=radio]{position:relative;height:22px;width:22px;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}input[type=radio]::before{content:"";cursor:pointer;position:absolute;top:50%;left:50%;width:1rem;height:1rem;border-radius:10px;transform:translate(-50%, -50%);background-color:#fff;border:2px solid var(--primary-color)}input[type=radio]:checked::after{content:"";position:absolute;top:50%;left:50%;width:.5rem;height:.5rem;border-radius:50%;background-color:var(--primary-color);transform:translate(-50%, -50%);visibility:visible}`,"",{version:3,sources:["webpack://./src/styles/vars.scss","webpack://./src/styles/styles.scss"],names:[],mappings:"AAAA,MACI,wBAAA,CACA,8BAAA,CACA,0BAAA,CACA,uBAAA,CAEA,iCAAA,CACA,6BAAA,CACA,8CAAA,CAEA,qDAAA,CACA,0DAAA,CAEA,oBAAA,CACA,mBAAA,CACA,mBAAA,CACA,mBAAA,CAIJ,yBACI,MACI,mBAAA,CACA,mBAAA,CACA,mBAAA,CACA,mBAAA,CAAA,CCvBR,EACI,QAAA,CACA,SAAA,CACA,qBAAA,CAGJ,SACI,eAAA,CAGJ,KAEI,mCAAA,CACA,eAAA,CACA,0BAAA,CACA,4BAAA,CACA,qCAAA,CAGJ,aAEI,4BAAA,CAGJ,QACI,4BAAA,CACA,YAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,kDAAA,CACA,qBAAA,CACA,2BAAA,CACA,0BAAA,CACA,8BAAA,CACA,+BAAA,CAGJ,KACI,gBAAA,CACA,iBAAA,CACA,QACI,aAAA,CAIR,qBACI,UAAA,CAGJ,2BACI,eAAA,CAIJ,2BACI,kBAAA,CACA,uCAAA,CAGF,kBACE,iBAAA,CACA,WAAA,CACA,UAAA,CACA,uBAAA,CACA,oBAAA,CACA,eAAA,CACA,YAAA,CAGF,0BACE,UAAA,CACA,cAAA,CACA,iBAAA,CACA,OAAA,CACA,QAAA,CACA,UAAA,CACA,WAAA,CACA,kBAAA,CACA,+BAAA,CACA,qBAAA,CACA,qCAAA,CAGF,iCACE,UAAA,CACA,iBAAA,CACA,OAAA,CACA,QAAA,CACA,WAAA,CACA,YAAA,CACA,iBAAA,CACA,qCAAA,CACA,+BAAA,CACA,kBAAA",sourcesContent:[":root {\r\n    --primary-color: #123123;\r\n    --inverted-primary-color: #fff;\r\n    --secondary-color: #ffffff;\r\n    --accent-color: #5b63ff;\r\n\r\n    --bg-color-main: hsl(0, 0%, 100%);\r\n    --bg-color-secondary: #767676;\r\n    --bg-color-secondary-light:rgb(166, 185, 165)5;\r\n\r\n    --font-family-main: 'Courier New', Courier, monospace;\r\n    --font-family-secondary: 'Courier New', Courier, monospace;\r\n    \r\n    --font-size-xs: 12px;\r\n    --font-size-s: 18px;\r\n    --font-size-m: 24px;\r\n    --font-size-l: 30px;\r\n}\r\n\r\n\r\n@media (max-width: 450px) {\r\n    :root {\r\n        --font-size-xs: 8px;\r\n        --font-size-s: 14px;\r\n        --font-size-m: 20px;\r\n        --font-size-l: 26px;\r\n    }\r\n}","@import './vars';\r\n\r\n*{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nh1, h2, h3 {\r\n    font-weight: 600;\r\n}\r\n\r\nbody {\r\n    // font-family: var(--font-family-primary);\r\n    font-family: \"Montserrat\", sans-serif;\r\n    font-weight: 300;\r\n    color: var(--primary-color);\r\n    font-size: var(--font-size-s);\r\n    background-color: var(--bg-color-main);\r\n}\r\n\r\n.title,\r\n.date {\r\n    font-size: var(--font-size-l);\r\n}\r\n\r\n.header {\r\n    color: var(--secondary-color);\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background: url('../assets/beach.jpg');\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-blend-mode: multiply;\r\n    background-color: rgba($color: #000000, $alpha: .5);\r\n}\r\n\r\n.map {\r\n    margin-top: 100px;\r\n    text-align: center;\r\n    & h3 {\r\n        margin: 10px 0;\r\n    } \r\n}\r\n\r\n*::-webkit-scrollbar {\r\n    width: 14px;\r\n  }\r\n  \r\n*::-webkit-scrollbar-track {\r\n    background: none;\r\n    // background-color: var(--bg-color-main);\r\n  }\r\n  \r\n*::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  input[type='radio'] {\r\n    position: relative;\r\n    height: 22px;\r\n    width: 22px;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    appearance: none;\r\n    outline: none;\r\n  }\r\n  \r\n  input[type='radio']::before {\r\n    content: '';\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 1rem;\r\n    height: 1rem;\r\n    border-radius: 10px;\r\n    transform: translate(-50%, -50%);\r\n    background-color: white;\r\n    border: 2px solid var(--primary-color);\r\n  }\r\n  \r\n  input[type='radio']:checked::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 0.5rem;\r\n    height: 0.5rem;\r\n    border-radius: 50%;\r\n    background-color: var(--primary-color);\r\n    transform: translate(-50%, -50%);\r\n    visibility: visible;\r\n  }"],sourceRoot:""}]);const p=l},645:n=>{"use strict";n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,A){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);t&&i[l[0]]||(void 0!==A&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=A),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),r.push(l))}},r}},667:n=>{"use strict";n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{"use strict";n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),A="/*# ".concat(o," */");return[r].concat([A]).join("\n")}return[r].join("\n")}},379:n=>{"use strict";var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var A={},i=[],a=0;a<n.length;a++){var s=n[a],c=t.base?s[0]+t.base:s[0],l=A[c]||0,d="".concat(c," ").concat(l);A[c]=l+1;var p=e(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var C=o(u,t);t.byIndex=a,r.splice(a,0,{identifier:d,updater:C,references:1})}i.push(d)}return i}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var A=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<A.length;i++){var a=e(A[i]);r[a].references--}for(var s=t(n,o),c=0;c<A.length;c++){var l=e(A[c]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}A=s}}},569:n=>{"use strict";var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{"use strict";n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{"use strict";n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{"use strict";n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var A=e.sourceMap;A&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{"use strict";n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},614:n=>{n.exports='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"></path></svg>'},762:n=>{n.exports='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M40 48C26.7 48 16 58.7 16 72v48c0 13.3 10.7 24 24 24H88c13.3 0 24-10.7 24-24V72c0-13.3-10.7-24-24-24H40zM192 64c-17.7 0-32 14.3-32 32s14.3 32 32 32H480c17.7 0 32-14.3 32-32s-14.3-32-32-32H192zm0 160c-17.7 0-32 14.3-32 32s14.3 32 32 32H480c17.7 0 32-14.3 32-32s-14.3-32-32-32H192zm0 160c-17.7 0-32 14.3-32 32s14.3 32 32 32H480c17.7 0 32-14.3 32-32s-14.3-32-32-32H192zM16 232v48c0 13.3 10.7 24 24 24H88c13.3 0 24-10.7 24-24V232c0-13.3-10.7-24-24-24H40c-13.3 0-24 10.7-24 24zM40 368c-13.3 0-24 10.7-24 24v48c0 13.3 10.7 24 24 24H88c13.3 0 24-10.7 24-24V392c0-13.3-10.7-24-24-24H40z"></path></svg>'},954:(n,r,e)=>{"use strict";n.exports=e.p+"38aa3c1de9cd029c5fee.jpg"}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var A=r[t]={id:t,exports:{}};return n[t](A,A.exports,e),A.exports}e.m=n,e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var r=e.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var t=r.getElementsByTagName("script");if(t.length)for(var o=t.length-1;o>-1&&!n;)n=t[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{"use strict";var n=e(379),r=e.n(n),t=e(795),o=e.n(t),A=e(569),i=e.n(A),a=e(565),s=e.n(a),c=e(216),l=e.n(c),d=e(589),p=e.n(d),u=e(137),C={};C.styleTagTransform=p(),C.setAttributes=s(),C.insert=i().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=l(),r()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;var m=e(204),g={};g.styleTagTransform=p(),g.setAttributes=s(),g.insert=i().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=l(),r()(m.Z,g),m.Z&&m.Z.locals&&m.Z.locals;var f=e(762),v=e.n(f);var y=e(856),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=l(),r()(y.Z,h),y.Z&&y.Z.locals&&y.Z.locals;var x=e(588),b={};function w(n="div",r="body",e="",t=""){const o=document.querySelector(r).appendChild(document.createElement(n));return o.textContent=e,o.classList.add(t),o}b.styleTagTransform=p(),b.setAttributes=s(),b.insert=i().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=l(),r()(x.Z,b),x.Z&&x.Z.locals&&x.Z.locals;var B=e(309),_={};_.styleTagTransform=p(),_.setAttributes=s(),_.insert=i().bind(null,"head"),_.domAPI=o(),_.insertStyleElement=l(),r()(B.Z,_),B.Z&&B.Z.locals&&B.Z.locals;const k=[{question:"Будете ли вы на свадьбе?",options:["Да","Нет"]},{question:"Какие обязательные блюда вы хотели бы увидеть на свадебном банкете?",options:["Нет предпочтений","answer"]},{question:"Есть ли у вас какие-либо пищевые аллергии или диетические ограничения, о которых мы должны знать при подготовке меню?",options:["Нет","answer"]},{question:"Какие у вас предпочтения по алкоголю?",options:["Шампанское","Вино","Водка","Коньяк","answer"]}],I=[["Будет ли дресс-код?","Мы будем рады, если девушки выберут вечерние или коктейльные платья в пастельных тонах, а мужчины — костюм."],["Нужно ли дарить цветы?","Просим вас не дарить цветы, так как на следующий день мы улетаем в свадебное путешествие и не успеем насладиться красивыми букетами."],["Какие подарки предпочтительны?","Мы составили wish-лист подарков, которые были бы нам особенно приятны или полезны. Но мы будем рады и сюрпризам, а также поздравлениям в конвертах."]];var S=e(614),q=e.n(S);var z=e(732),T={};T.styleTagTransform=p(),T.setAttributes=s(),T.insert=i().bind(null,"head"),T.domAPI=o(),T.insertStyleElement=l(),r()(z.Z,T),z.Z&&z.Z.locals&&z.Z.locals;var E=e(135),Z={};function M(n,r){const e=[];for(let n=0;n<r.length;n++)document.querySelectorAll(`input.question${n}`).forEach((n=>{e.push(n.checked)}));e.filter((n=>!0===n)).length===r.length?n.removeAttribute("disabled"):n.setAttribute("disabled",!0)}Z.styleTagTransform=p(),Z.setAttributes=s(),Z.insert=i().bind(null,"head"),Z.domAPI=o(),Z.insertStyleElement=l(),r()(E.Z,Z),E.Z&&E.Z.locals&&E.Z.locals;const L=k;var j=e(562),$={};$.styleTagTransform=p(),$.setAttributes=s(),$.insert=i().bind(null,"head"),$.domAPI=o(),$.insertStyleElement=l(),r()(j.Z,$),j.Z&&j.Z.locals&&j.Z.locals;const Y=()=>{document.body.innerHTML+='\n        <div class="backBtn">\n            <img class="backBtn__img" src="../../../assets/angles.svg" alt="back to top"/>\n        </div>',window.addEventListener("DOMContentLoaded",(()=>{document.querySelector(".backBtn").addEventListener("click",(()=>{window.scrollTo(0,0)}))})),window.addEventListener("scroll",function(n,r){let e=null;return()=>{e||(e=setTimeout((()=>{window.scrollY>=window.innerHeight?document.querySelector(".backBtn__img").style.display="block":document.querySelector(".backBtn__img").style.display="none",clearTimeout(e),e=null}),500))}}())};var J=e(750),G={};G.styleTagTransform=p(),G.setAttributes=s(),G.insert=i().bind(null,"head"),G.domAPI=o(),G.insertStyleElement=l(),r()(J.Z,G),J.Z&&J.Z.locals&&J.Z.locals;var H=e(629),R={};function Q(n,r=.5){new IntersectionObserver((function(n,r){if(n[0].isIntersecting){const{opacity:r}=n[0].target.style;if(0===r)return null;n[0].target.style.opacity=1}}),{root:null,rootMargin:"0px",threshold:r}).observe(n)}R.styleTagTransform=p(),R.setAttributes=s(),R.insert=i().bind(null,"head"),R.domAPI=o(),R.insertStyleElement=l(),r()(H.Z,R),H.Z&&H.Z.locals&&H.Z.locals,document.addEventListener("DOMContentLoaded",(()=>{Y(),(()=>{document.body.innerHTML+='<div class="modal"></div>';const n=document.querySelector(".modal");function r(){n&&(n.style.display="none",document.body.style.overflow="auto")}n.innerHTML+='<div class="modal__sendForm">\n        <div>\n            <label for="guestName" >Ваше имя: </label>\n            <input id="guestName"/>\n            <button class="modal__closeBtn">&#10006;</button>\n        </div>\n        <button class="modal__sendBtn">Отправить</button>\n    </div>';const e=document.querySelector("#guestName"),t=document.querySelector(".modal__sendBtn");document.querySelector(".modal__closeBtn").addEventListener("click",r),t.addEventListener("click",(()=>{const n=function(n){const r={};return n.childNodes&&Array.from(n.childNodes).filter((n=>"DIV"===n.tagName)).forEach((n=>{r[n.querySelector("h3").textContent]=n.querySelector("input:checked").value})),r}(document.querySelector(".survey__wrapper"));e.value?n.name=e.value:alert("Пожалуйста, введите имя");try{!async function(n){try{const r=await fetch("http://localhost:5500/",{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json;charset=utf-8"}});if(!r.ok)throw new Error("Http request failed");return await r.json()}catch(n){throw new Error(n)}}(n),document.querySelector(".survey__wrapper").querySelectorAll("input").forEach((n=>{switch(n.type){case"radio":n.checked=!1;break;case"text":n.value=""}})),M(document.querySelector(".survey__button"),k)}catch(n){throw new Error(n)}document.querySelector(".modal").style.display="none",document.body.style.overflow="auto"})),n.addEventListener("click",(e=>{e.target===n&&r()}))})(),function(){const n=document.querySelector(".navigation"),r=document.querySelector(".survey"),e=document.querySelector(".answers"),t=document.querySelector(".message"),o=["Приглашение","Опрос","Ответы","Контакты"].map((n=>{const o=document.createElement("a");return o.addEventListener("click",(()=>{switch(n){case"Приглашение":t&&window.scrollTo(t.getBoundingClientRect());break;case"Опрос":r&&window.scrollTo(r.getBoundingClientRect());break;case"Ответы":e&&window.scrollTo(e.getBoundingClientRect())}})),o.textContent=n,o}));if(window.navigator.userAgent.includes("iPhone")||window.navigator.userAgent.includes("Android"))return((n,r)=>{n.innerHTML+=`\n    <div class="dropdown">\n        <button class="dropbtn">${v()}</button>\n        <div class="dropdown-content">\n        </div>\n    </div>\n    `;const e=document.querySelector(".dropdown-content");r.forEach((n=>{e.appendChild(n)})),document.querySelector(".dropbtn").addEventListener("click",(()=>{e.classList.toggle("opened")})),window.addEventListener("click",(({target:n})=>{n.matches(".dropbtn")||n.matches(".dropdown-content")||n!==document.querySelector("svg")&&e.classList.remove("opened")}))})(n,o);o.forEach((r=>{n.append(r)}))}(),Q((()=>{const n=document.querySelector(".message");return n.innerHTML+='\n    <div class="message__content">\n        <p>Дорогие друзья!</p>\n        <p>Жить, любить, чувствовать. Однажды мы поняли, что нет ничего важнее этого.</p> \n        <p>И что идти дальше мы хотим только вместе. А теперь мечтаем, чтобы день нашей свадьбы </p>\n        <p>стал красивым и ярким событием на этом увлекательном пути.</p>\n        <p>Мы будем очень рады, если вы разделите этот счастливый день с нами.</p>\n        <p>Увидимся на нашей свадьбе!</p>\n    </div>\n    ',n})()),function(){document.querySelector(".timer");const n=new Date(2024,8,21,17,0,0),r=(w("div",".timer","","timer_wrapper"),w("div",".timer_wrapper","","timer_item")),e=w("div",".timer_wrapper","","timer_item"),t=w("div",".timer_wrapper","","timer_item"),o=w("div",".timer_wrapper","","timer_item"),A=n=>n<10?`0${n}`:n;setInterval((()=>{r.innerHTML=`<span class="time">${A(Math.floor((n-Date.now())/1e3/60/60/24))}</span> ДНЕЙ`,e.innerHTML=`<span class="time">${A(Math.floor((n-Date.now())/1e3/60/60)%24)}</span> ЧАСОВ`,t.innerHTML=`<span class="time">${A(Math.floor((n-Date.now())/1e3/60)%60)}</span> МИНУТ`,o.innerHTML=`<span class="time">${A(Math.floor((n-Date.now())/1e3)%60)}</span> СЕКУНД`}),1e3)}(),Q(function(){const n=I,r=document.querySelector(".answers");return r.innerHTML+="<h2>Ответы на вопросы</h2>",n.forEach(((n,e)=>{r.insertAdjacentHTML("beforeend",`    \n            <button class="answers__question${e} answers__btn">\n                <h3>${n[0]}</h3>\n                <div class="answers__arrow${e}">\n                    ${q()}\n                </div>\n            </button>\n            <div class="answers__answerItem${e} answerWrapper"><p>${n[1]}</p></div>`),document.querySelector(`.answers__question${e}`).addEventListener("click",(()=>function(n,r){const e=document.querySelector(n);"none"!==e.style.display&&e.style.display?e.style.display="none":e.style.display="block",document.querySelector(r).classList.toggle("rotate")}(`.answers__answerItem${e}`,`.answers__arrow${e}`)))})),r}()),Q(function(){const n=w("div",".survey","","survey__wrapper");n.innerHTML+='<h2 class="survey__title">Опрос</h2>',L.forEach(((n,r)=>{w("div",".survey__wrapper","",`question${r}`).classList.add("wrapper"),w("h3",`.question${r}`,n.question,"question__title"),n.options.forEach((n=>{!function(n,r){const e=`\n            <div>\n                <input type="radio" name="${r}" class="survey_radio ${r}" value="${n}" id="${r}-${n}">\n                ${"answer"===n?`<input placeholder="Свой вариант" class="survey__input" name="${r}"></input>`:`<label for="${r}-${n}" class="label">${n}</label>`}\n            </div>`;document.querySelector(`.${r}`).innerHTML+=e}(n,`question${r}`)}))})),n.innerHTML+='<button class="survey__button">Отправить</button>';const r=document.querySelector(".survey__button");return r.setAttribute("disabled",!0),r.addEventListener("click",(()=>{document.querySelector(".modal").style.display="flex",document.body.style.overflow="hidden"})),M(r,L),document.querySelectorAll(".survey_radio").forEach((n=>{n.addEventListener("click",(()=>{M(r,L)}))})),document.querySelector(".survey")}()),document.querySelector(".map").innerHTML+='\n        <h2>Место проведения мероприятия</h2>\n        <p>г. Краснодар, Зиповская ул., 5В</p>\n        <div class="location">\n            <div><h2>Как добраться?</h2></div>\n            <div class="yandexMap"><a href="https://yandex.ru/maps/org/prostranstvo/135085512711/?utm_medium=mapframe&utm_source=maps" style="color:#eee;font-size:12px;position:absolute;top:0px;">Пространство</a><a href="https://yandex.ru/maps/35/krasnodar/category/rental_of_venues_for_cultural_events/15215599314/?utm_medium=mapframe&utm_source=maps" style="color:#eee;font-size:12px;position:absolute;top:14px;">Аренда площадок для культурно-массовых мероприятий в Краснодаре</a><a href="https://yandex.ru/maps/35/krasnodar/category/photo_studio/84843009243/?utm_medium=mapframe&utm_source=maps" style="color:#eee;font-size:12px;position:absolute;top:28px;">Фотостудия в Краснодаре</a><iframe src="https://yandex.ru/map-widget/v1/?ll=38.990728%2C45.063661&mode=search&oid=135085512711&ol=biz&z=16.57" width="100%" height="400" frameborder="1" allowfullscreen="true" style="position:relative;"></iframe></div>\n        </div>\n    '}),!1)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,